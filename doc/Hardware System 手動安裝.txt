Ubuntu + Nginx + FastAPI + SQLite 建立Web

# 更新
sudo apt update && sudo apt upgrade -y

# 安裝 Nginx
sudo apt install nginx -y

# Nginx 開機自動啟動
sudo systemctl start nginx
sudo systemctl enable nginx

# 安裝 curl
sudo apt install curl -y

# 安裝 Python
sudo apt install python3 python3-pip -y

# 安裝 SQLite 
# sudo apt install sqlite3 libsqlite3-dev
sudo apt install sqlitebrowser -y

# 安裝 FastAPI、uvicorn、gunicorn
sudo apt install uvicorn gunicorn -y
pip install --break-system-packages python-dateutil fastapi
# 建立專案資料夾
mkdir /home/user/FastAPI
cd /home/user/FastAPI

# 這邊下載Github資料後解壓縮到各別位置
sudo wget -O /home/user/FastAPI.zip $(curl -s https://api.github.com/repos/zz22558822/Hardware_System/releases/latest | grep "browser_download_url" | grep ".zip" | cut -d '"' -f 4)
sudo chmod -R 777 /home/user/FastAPI.zip

mkdir /home/user/FastAPI
sudo unzip -o /home/user/FastAPI.zip -d /home/user/FastAPI
sudo chmod -R 777 /home/user/FastAPI
sudo rm -f /home/user/FastAPI.zip

sudo cp /home/user/FastAPI/index.html /var/www/html/index.html
sudo cp -r /home/user/FastAPI/css /var/www/html/css
sudo cp -r /home/user/FastAPI/js /var/www/html/js
sudo cp -r /home/user/FastAPI/img /var/www/html/img

# 設定資料夾環境變數
export PYTHONPATH=$PYTHONPATH:/home/user/FastAPI/SQL



---------------------------------------

# 建立 SSL 憑證目錄並生成自簽證書
sudo mkdir -p /opt/SSL
sudo openssl req -x509 -newkey rsa:4096 -keyout /opt/SSL/private.key -out /opt/SSL/certificate.crt -days 36499 -nodes -subj "/CN=<<改為你的Domain>>"
# 設置適當的權限
sudo chmod 600 /opt/SSL/private.key
sudo chmod 644 /opt/SSL/certificate.crt
# 設置檔案
sudo nano /etc/nginx/sites-available/FastAPI


'''
# HTTP (80) 端口的設置，將流量重定向到 HTTPS
server {
    listen 80;
    server_name 你的Domain;  # 替換為你的域名或 IP 地址

    # 將所有流量重定向到 HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS (443) 端口的設置
server {
    listen 443 ssl;
    server_name 你的Domain;  # 替換為你的域名或 IP 地址

    # SSL 設置
    ssl_certificate /opt/SSL/certificate.crt;  # 替換為你的證書路徑
    ssl_certificate_key /opt/SSL/private.key;  # 替換為你的密鑰路徑

    # SSL 配置（可選，你可以根據需要添加）
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # 提供靜態文件 (index.html)
    location / {
        root /var/www/html;  # 靜態文件的根目錄
        index index.html;
    }

    # FastAPI 路由的反向代理，將所有 /api/ 路由轉發到 FastAPI
    location /api/ {
        proxy_pass http://127.0.0.1:8000;  # 假設 FastAPI 運行在 localhost 的 8000 埠
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 設置
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";

        # 預檢請求 OPTIONS 直接返回成功
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
}

'''
---------------------------------------


# 創建符號連結 啟用網站配置
sudo ln -s /etc/nginx/sites-available/FastAPI /etc/nginx/sites-enabled/

# 刪除預設的符號連結
sudo rm -f /etc/nginx/sites-enabled/default


# 檢查正確性
sudo nginx -t
# 重啟 Nginx
sudo systemctl restart nginx


# 修改main的 CORS Domain
sudo nano /home/user/FastAPI/SQL/main.py







---------------------------------------
# 測試用運行
uvicorn main:app --reload
uvicorn /home/user/FastAPI/SQL/main:app --reload
gunicorn -w 4 -k uvicorn.workers.UvicornWorker main:app
